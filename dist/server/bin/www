#!servicedesk nodejs env/ node

//const cluster = require('express-cluster');
const path = require('path');
const CONFIG = require(path.join(__dirname, '../config/config.json'));

/**
 * make a log directory, just in case it isn't there.
 */
try {
    require('fs').mkdirSync(path.join(__dirname, '../logs'));
} catch (e) {
    if (e.code != 'EEXIST') {
        console.error("Could not set up log directory, error was: ", e);
        process.exit(1);
    }
}

/**
 * Initialise log4js first, so we don't miss any log messages
 */
var log4js = require('log4js');
log4js.configure(path.join(__dirname, '../config/log4js.json'));
var logger = log4js.getLogger("startup");

/**
 *let's start up a cluster
 */
var app = require('../app');
var http = require('http');
//var https = require('https');
//var fs = require('fs');
//var options = {
//	key: fs.readFileSync('./server/app/keys/private.pem'),
//	cert: fs.readFileSync('./server/app/keys/public.pem')
//};
// Start listening on the port
//https.createServer(options, app).listen(CONFIG.port, function() {
//  console.log("HTTPS server listening on port " + CONFIG.port);
//});
http.createServer(app).listen(CONFIG.port_80, function() {
  console.log("HTTP server listening on port " + CONFIG.port_80);
});

/*
app.set('port', CONFIG.port || 3003);
var server = app.listen(app.get('port'), function() {
    logger.info('Express server listening on port ', server.address().port, " with pid ", process.pid);
});
*/
//});
